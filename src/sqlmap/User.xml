<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="user">
    <!--查询-->
    <!--
		[id]：statement的id，要求在命名空间内唯一
		[parameterType]：入参的java类型
		[resultType]：查询出的单条结果集对应的java类型
		[#{}]： 表示一个占位符?
		[#{id}]：表示该占位符待接收参数的名称为id。
		注意：如果参数为简单类型时，#{}里面的参数名称可以是任意定义
	 -->

    <select id="finderUserByid" parameterType="int" resultType="model.User">
        select  *  from user  where id =#{id};
    </select>
    <select id="finderUserByName" parameterType="String" resultType="model.User">
        select  *  from user where username like '%${value}%';
    </select>
<!--插入数据-->
    <insert id="insertUser" parameterType="model.User">
        insert  into  user (username,sex,birthday,address)
        values (#{username},#{sex},#{birthday},#{address});
    </insert>
    <!--删除-->
    <delete id="deleteUserByid" parameterType="model.User">
        delete from user  where id=#{id};
    </delete>
    <!--更新-->
  <update id="updateUserByid" parameterType="model.User">
      update  user set sex=#{sex},address=#{address}
      where id=#{id};
  </update>
    <!--插入返回主键id-->
    <insert id="insertUser2" parameterType="model.User">
        <!--
                [selectKey标签]：通过select查询来生成主键
                [keyProperty]：指定存放生成主键的属性
                [resultType]：生成主键所对应的Java类型
                [order]：指定该查询主键SQL语句的执行顺序，相对于insert语句
                [last_insert_id]：MySQL的函数，要配合insert语句一起使用 -->

        <selectKey keyProperty="id" resultType="int" order="AFTER">
    SELECT LAST_INSERT_ID()
</selectKey>
        insert  into  user (username,sex,birthday,address)
        values (#{username},#{sex},#{birthday},#{address});
    </insert>
</mapper>